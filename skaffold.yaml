# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: skaffold/v1beta13
kind: Config
build:
  artifacts:
    - image: substrafoundation/hlf-k8s
      context: .
      docker:
        dockerfile: images/hlf-k8s/Dockerfile
      sync:
        manual:
          - src: ./bin/*
            dest: /usr/local/bin/

deploy:
  statusCheckDeadlineSeconds: 300
  helm:
    releases:
      - name: network-orderer
        chartPath: charts/hlf-k8s
        namespace: orderer
        imageStrategy:
          helm: {}
        values:
          image: substrafoundation/hlf-k8s
        setValues:
          nginx-ingress.enabled: true
          peer.enabled: false
          ca.caName: rcaOrderer
          ca.host: network-orderer-ca.orderer  # {name}.{namespace}
          ca.orderer.host: network-orderer-ca.orderer  # {name}.{namespace}
          organization.id: MyOrdererMSP
          organization.name: MyOrderer
          orderer.enabled: true
          systemOrganizations[0].name: MyOrg1
          systemOrganizations[0].secret: org-1-org-config
          orderer.host: network-orderer.orderer  # {name}.{namespace}
          orderer.ord.mspID: MyOrdererMSP
          fetchSecrets[0].from: org-config
          fetchSecrets[0].to: org-1-org-config
          fetchSecrets[0].filename: configOrg.json
          fetchSecrets[0].namespace: org-1
          enrollments.creds[0].name: admin
          enrollments.creds[0].secret: adminpwd
          enrollments.creds[0].options: "--id.attrs admin=true:ecert"
          enrollments.creds[1].name: user
          enrollments.creds[1].secret: pwd
          enrollments.creds[1].options: "--id.type orderer"
          enrollements.csrHost: network-orderer.orderer

      - name: network-org-1-peer-1
        chartPath: charts/hlf-k8s
        namespace: org-1
        imageStrategy:
          helm: {}
        values:
          image: substrafoundation/hlf-k8s
        setValues:
          nginx-ingress.enabled: true
          nginx-ingress.controller.scope.enabled: true
          ca.caName: rcaOrg1
          ca.host: network-org-1-peer-1-ca.org-1  # {name}.{namespace}
          ca.orderer.host: network-orderer-ca.orderer
          peer.host: network-org-1-peer-1.org-1  # {name}.{namespace}
          organization.id: MyOrg1MSP
          organization.name: MyOrg1
          peer.peer.mspID: MyOrg1MSP
          chaincodes[0].instantiate: true
          chaincodes[0].name: mycc
          chaincodes[0].version: "1.0"
          chaincodes[0].policy: OR("MyOrg1MSP.member"\,"MyOrg2MSP.member")
          # Note: Instead of an URL, you can use an absolute path, e.g. /home/johndoe/code/substra-chaincode
          #       This path must be accessible to kubernetes. See README for details.
          chaincodes[0].src: https://github.com/SubstraFoundation/substra-chaincode/archive/master.tar.gz
          channels[0].name: mychannel
          channels[0].create: true
          channels[0].join: true
          channels[0].extraOrgs[0].name: MyOrg2
          channels[0].extraOrgs[0].secret: org-2-org-config-anchor
          orderer.host: network-orderer.orderer
          peer.peer.gossip.externalEndpoint: network-org-1-peer-1.org-1:7051  # {name}.{namespace}:{port}
          fetchSecrets[0].from: org-config-anchor
          fetchSecrets[0].to: org-2-org-config-anchor
          fetchSecrets[0].filename: configOrgWithAnchors.json
          fetchSecrets[0].namespace: org-2
          enrollments.creds[0].name: admin
          enrollments.creds[0].secret: adminpwd
          enrollments.creds[0].options: "--id.attrs hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert"
          enrollments.creds[1].name: user,
          enrollments.creds[1].secret: pwd,
          enrollments.creds[1].options: "--id.type peer"
          enrollements.csrHost: network-org-1-peer-1.org-1


      - name: network-org-2-peer-1
        chartPath: charts/hlf-k8s
        namespace: org-2
        imageStrategy:
          helm: {}
        values:
          image: substrafoundation/hlf-k8s
        setValues:
          nginx-ingress.enabled: true
          nginx-ingress.controller.scope.enabled: true
          ca.caName: rcaOrg2
          ca.host: network-org-2-peer-1-ca.org-2  # {name}.{namespace}
          ca.orderer.host: network-orderer-ca.orderer
          peer.host: network-org-2-peer-1.org-2  # {name}.{namespace}
          organization.id: MyOrg2MSP
          organization.name: MyOrg2
          peer.peer.mspID: MyOrg2MSP
          chaincodes[0].name: mycc
          chaincodes[0].version: "1.0"
          # Note: Instead of an URL, you can use an absolute path, e.g. /home/johndoe/code/substra-chaincode
          #       This path folder must be accessible to kubernetes. See README for details.
          chaincodes[0].src: https://github.com/SubstraFoundation/substra-chaincode/archive/master.tar.gz
          channels[0].name: mychannel
          channels[0].join: true
          orderer.host: network-orderer.orderer
          peer.peer.gossip.externalEndpoint: network-org-2-peer-1.org-2:7051  # {name}.{namespace}:{port}
          enrollments.creds[0].name: admin
          enrollments.creds[0].secret: adminpwd
          enrollments.creds[0].options: "--id.attrs hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert"
          enrollments.creds[1].name: user,
          enrollments.creds[1].secret: pwd,
          enrollments.creds[1].options: "--id.type peer"
          enrollements.csrHost: network-org-2-peer-1.org-2
